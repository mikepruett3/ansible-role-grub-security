---
# tasks file for ansible-role-grub-security

- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yaml"

#- name: "Gather the package facts"
#  ansible.builtin.package_facts:
#    manager: auto
#  when: ansible_facts.packages is not defined

- name: "Set the appropriate permissions on the Grub config file"
  ansible.builtin.file:
    path: "{{ grubcfg }}"
    owner: root
    group: root
    mode: '0600'

- name: "Check if Grub password file already exist"
  ansible.builtin.stat:
    path: "{{ passfile }}"
  register: grub2_passfile

- name: "Deploy Grub password file, if it doesn't exist (Debian)"
  ansible.builtin.template:
    src: debian_grub2_passfile.j2
    dest: "{{ passfile }}"
    owner: root
    group: root
    mode: '0755'
  when:
    - grub2_passfile.stat.exists == False
    - ansible_os_family == 'Debian'

- name: "Configure Grub default menu configuration file (Debian)"
  ansible.builtin.lineinfile:
    path: "{{ menufile }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: ^CLASS="--class gnu-linux --class gnu --class os"
      line: CLASS="--class gnu-linux --class gnu --class os --unrestricted"
  when:
    - grub2_passfile.stat.exists == False
    - ansible_os_family == 'Debian'

- name: "Configure Grub defaults configuration file (Debian)"
  ansible.builtin.lineinfile:
    path: "{{ grubdefaults }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: ^GRUB_TIMEOUT_STYLE=hidden
      line: '#GRUB_TIMEOUT_STYLE=hidden'
    - regexp: ^GRUB_TIMEOUT=0
      line: GRUB_TIMEOUT=10
  when:
    - grub2_passfile.stat.exists == False
    - ansible_os_family == 'Debian'

- name: "Update Grub config with new password file (Debian)"
  shell: "{{ mkconfig }} -o {{ grubcfg }}"
  when:
    - grub2_passfile.stat.exists == False
    - ansible_os_family == 'Debian'

